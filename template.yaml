AWSTemplateFormatVersion: "2010-09-09"
Description:
  無料の範囲内でEC2インスタンスを構築するためのテンプレートです。そのため、コンピューティング性能（AMI,インスタンスタイプ）は最少スペックで構成。
  なお、サーバー種別はWebサーバーを想定しています。

# ------------------------------------------------------------#
# Input Console
# ------------------------------------------------------------#
Metadata:
  AWS::CloudFormation::Interface:
    # パラメータグループ
    ParameterGroups:
      - Label:
          default: Name Prefix
        Parameters:
          - CompanyPrefix
          - PJPrefix
      - Label:
          default: Environment
        Parameters:
          - Environment
      - Label:
          default: EC2Instance Configuration
        Parameters:
          - EC2InstanceServiceName
          - EC2InstanceAMI
          - EC2InstanceInstanceType
          - EC2InstanceVolumeType
          - EC2InstanceVolumeSize
          - EC2InstanceKeyPairName
          - SSHAccessSourceIP
    # パラメータラベル
    ParameterLabels:
      EC2InstanceServiceName:
        default: EC2 Name
      EC2InstanceAMI:
        default: EC2 AMI
      EC2InstanceInstanceType:
        default: EC2 InstanceType
      EC2InstanceVolumeType:
        default: EC2 VolumeType
      EC2InstanceVolumeSize:
        default: EC2 VolumeSize
      EC2InstanceKeyPairName:
        default: EC2 KeyPairName
      SSHAccessSourceIP:
        default: SSH AccessSourceIP

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------#
Parameters:
  CompanyPrefix:
    Type: String
  PJPrefix:
    Type: String
  Environment:
    Type: String
    AllowedValues:
      - prd
      - stg
      - demo

  # EC2Instance
  EC2InstanceServiceName:
    Type: String
  EC2InstanceAMI:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
  EC2InstanceInstanceType:
    Type: String
  EC2InstanceVolumeType:
    Type: String
  EC2InstanceVolumeSize:
    Type: String
  EC2InstanceKeyPairName:
    Type: AWS::EC2::KeyPair::KeyName

  # SecurityGroup
  SSHAccessSourceIP:
    Type: String

Resources:
# ------------------------------------------------------------#
# IAM Role for EC2
# ------------------------------------------------------------#
  EC2IAMRole: 
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-IAMRole
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
          - Effect: Allow
            Principal: 
              Service: 
                - ec2.amazonaws.com
            Action: 
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns: 
        #- arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        #- arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-InstanceProfile
      Path: /
      Roles: 
        - !Ref EC2IAMRole

# ------------------------------------------------------------#
#  EC2Instance AZ:A #1
# ------------------------------------------------------------#
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      #DependsOn: ManagedSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-01

      # コンピューティング性能
      #
      # AMI
      ImageId: !Ref EC2InstanceAMI
      # インスタンスタイプ
      InstanceType: !Ref EC2InstanceInstanceType

      # キーペアの名前
      KeyName: !Ref EC2InstanceKeyPairName
      # インスタンスを起動するサブネット
      SubnetId: { "Fn::ImportValue": !Sub "${CompanyPrefix}-private-subnet-a" }
      #
      IamInstanceProfile: !Ref EC2InstanceProfile
      # 終了保護（インスタンスの休止が有効であるかどうか）
      HibernationOptions: 
        Configured: false
      # 詳細モニタリングを有効にするかどうか
      Monitoring: false
      # インスタンスのテナンシー
      Tenancy: 'default'
      # インスタンスのアベイラビリティーゾーン
      AvailabilityZone: !Sub ${AWS::Region}a
      # セキュリティグループ
      SecurityGroupIds:
        - !Ref ManagedSecurityGroup
        - !Ref WebSecurityGroup
      #
      DisableApiTermination: false
      # VPC で起動されたインスタンスが NAT を実行できるようにするかどうか（隠しパラメータ）
      SourceDestCheck: true
      
      # EBS
      #
      # Amazon EBS I/O 用に最適化されているかどうか（隠しパラメータ） ※追加料金が発生しなければ最適化する価値があるかも
      EbsOptimized: false
      BlockDeviceMappings: 
        - DeviceName: /dev/xvda
          # ルートボリューム
          Ebs: 
            # ボリュームを暗号化するかどうか
            Encrypted: false
            # インスタンス終了時に EBS ボリュームを削除するかどうか
            DeleteOnTermination: true
            # ボリュームタイプ
            VolumeType: !Ref EC2InstanceVolumeType
            # ボリュームのサイズ（GiB 単位）
            VolumeSize: !Ref EC2InstanceVolumeSize
      #
      UserData: !Base64 | 
        #! /bin/bash
        yum update -y

# ------------------------------------------------------------#
#  Managed SecurityGroup
# ------------------------------------------------------------#
  ManagedSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${PJPrefix}-${Environment}-managed-sg
      GroupDescription: '-'
      VpcId: {"Fn::ImportValue": !Sub "${CompanyPrefix}-vpc"}
      Tags:
        - Key: Name
          Value: !Sub ${PJPrefix}-${Environment}-managed-sg

      # Managed
      SecurityGroupEgress: 
        - IpProtocol: '-1'
          CidrIp: 0.0.0.0/0

  # SSH
  ManagedSecurityGroupIngressSsh:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ManagedSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      SourceSecurityGroupId: !GetAtt ManagedSecurityGroup.GroupId

  # ICMP
  ManagedSecurityGroupIngressIcmp:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref ManagedSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      SourceSecurityGroupId: !GetAtt ManagedSecurityGroup.GroupId

# ------------------------------------------------------------#
#  Web SecurityGroup
# ------------------------------------------------------------#
  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${PJPrefix}-${Environment}-web-sg
      GroupDescription: '-'
      VpcId: {"Fn::ImportValue": !Sub "${CompanyPrefix}-vpc"}
      Tags:
        - Key: Name
          Value: !Sub ${PJPrefix}-${Environment}-web-sg

      # HTTP, HTTPS
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

# ------------------------------------------------------------#
# コンソール出力情報
# ------------------------------------------------------------#
Outputs:
  EC2IAMRole:
    Description: "-"
    Value: !Ref EC2IAMRole
    Export:
      Name: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-IAMRole
  EC2InstanceProfile:
    Description: "-"
    Value: !Ref EC2InstanceProfile
    Export:
      Name: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-InstanceProfile
  EC2Instance:
    Description: "-"
    Value: !Ref EC2Instance
    Export:
      Name: !Sub ${PJPrefix}-${Environment}-${EC2InstanceServiceName}-01
  ManagedSecurityGroup:
    Description: "-"
    Value: !Ref ManagedSecurityGroup
    Export:
      Name: !Sub ${PJPrefix}-${Environment}-managed-sg
  WebSecurityGroup:
    Description: "-"
    Value: !Ref WebSecurityGroup
    Export:
      Name: !Sub ${PJPrefix}-${Environment}-web-sg
